// Dependencies
@import "../../variables/grid";
@import "../../breakpoints/breakpoints";
@import "clearfix";

// Bootstrap-ish grid system
@mixin container-fluid() {
  width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding-left: ($gutter / 2);
  padding-right: ($gutter / 2);
  box-sizing: border-box !important;
}

@mixin container() {
  @include container-fluid();

  @each $breakpoint, $max-width in $container-widths {
    @include media-breakpoint-up($breakpoint) {
      max-width: $max-width;
    }
  }
}

@mixin container-max-width($breakpoint) {
  $max-width: map_get($container-widths, $breakpoint);

  @if 0 != $max-width {
    @include container-fluid();

    max-width: $max-width;
  }
}

@mixin container-max-widths() {
  @each $breakpoint in map_keys($breakpoints) {
    .container-max-#{$breakpoint} {
      @include container-max-width($breakpoint);
    }
  }
}

@mixin row() {
  display: flex;
  flex-wrap: wrap;
  margin-left: ($gutter / -2);
  margin-right: ($gutter / -2);
}

@mixin col($size) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin col-offset($offset) {
  margin-left: percentage($offset / $columns);
}

@mixin grid() {
  %grid-column {
    width: 100%;
    position: relative;
    min-height: 1px;
    padding-right: ($gutter / 2);
    padding-left: ($gutter / 2);
    box-sizing: border-box !important;
  }

  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);

    .col-#{$breakpoint} {
      position: relative;
      flex-basis: 0;
      flex-grow: 1;
      max-width: 100%;
      min-height: 1px;
      padding-right: ($gutter / 2);
      padding-left: ($gutter / 2);
    }

    @for $i from 1 through $columns {
      .col-#{$breakpoint}-#{$i} {
        @extend %grid-column;
      }
    }

    @include media-breakpoint-up($breakpoint) {
      @for $i from 1 through $columns {
        .col-#{$breakpoint}-#{$i} {
          @include col($i);
        }
      }

      @for $i from 0 through ($columns - 1) {
        @if $breakpoint-counter != 1 or $i != 0 {
          .col-offset-#{$breakpoint}-#{$i} {
            @include col-offset($i);
          }
        }
      }
    }
  }
}